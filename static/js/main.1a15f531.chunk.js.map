{"version":3,"sources":["tools/serviceWorker.js","component/Header.tsx","config/constant.ts","component/OpenSource.tsx","component/TechShare.tsx","component/Life.tsx","container/App.tsx","index.js"],"names":["Boolean","window","location","hostname","match","IKey","Header","role","aria-label","FE","name","desc","link","AI","BASIC","OpenSource","state","_config","title","url","href","style","color","key","CONFIG","map","item","className","redirectToUrl","this","renderConfig","React","Component","list","id","tags","Life","i","App","TechShare","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a15f531.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n// import Lottie from 'lottie-react-web'\n// import axios from 'axios'\n\n/**\n * lottieJSON\n * assets: 图片\n * fr: 帧率\n * h / w: 高 宽\n * layers: 图层\n * nm: name\n */\nconst Header: React.FC = () => {\n  // const [lottieJSON, setLottie] = useState(null)\n\n  // useEffect(() => {\n  //   const fetch = async () => {\n  //     const body = await axios.get('https://assets7.lottiefiles.com/private_files/lf30_AGoC3n.json')\n  //     if (body && body.data) {\n  //       const data = body.data\n  //       setLottie(data)\n  //     }\n  //   }\n\n  //   fetch()\n  // }, [])\n\n  return (\n    <header>\n      <h1>Lin. JY</h1>\n      <p><span role=\"img\" aria-label=\"l\">🤠</span> An engineer and explorer. Let's improve everything.</p>\n      {/* {\n        lottieJSON && <div className=\"lotte-container\">\n          <Lottie \n            title=\"lottie\"\n            options={{ animationData: lottieJSON }}\n          />\n        </div>\n      } */}\n    </header>\n  )\n}\n\nexport default Header","\n// url: https://github.com/Linjiayu6/${name}\nexport interface IStructure {\n    name: string;\n    desc: string;\n    link?: string;\n}\n\nexport enum IKey {\n    'FE' = 'FE',\n    'AI' = 'AI',\n    'BASIC' = 'BASIC'\n}\n\nconst FE: IStructure[] = [\n    {\n        name: 'FE-Notes',\n        desc: '[2020] Front-End Notebook',\n    },\n    {\n        name: 'FE-RequestIdleCallback-demo',\n        desc: '[2020] RequestIdleCallback / Lottie / Performance / React Fiber Experiment',\n        link: 'https://linjiayu6.github.io/FE-RequestIdleCallback-demo/',\n    },\n    {\n        name: 'FlappyBird',\n        desc: '[2020] flappybird / canvas game',\n        link: 'https://linjiayu6.github.io/FlappyBird/',\n    },\n    {\n        name: 'Micro-Frontends',\n        desc: '[2020] micro frontends / react / vue / single-spa',\n    },\n    {\n        name: 'FlutterApp',\n        desc: '[2019] [Flutter / Dart] Flutter in Practice (Wechat UI)',\n    },\n    {\n        name: 'RN-APP',\n        desc: '[2019][React Native] This is the code repository for learning RN',\n    },\n    {\n        name: 'D3',\n        desc: '[2019][D3/React] This is the code repository for learning D3',\n        link: 'https://linjiayu6.github.io/D3/'\n    },\n    {\n        name: 'Redux-Code',\n        desc: '[2018][Redux] This is the code repository for learning Redux',\n    },\n    {\n        name: 'Koa2-react-boilerplate',\n        desc: '[2017] [Koa/React/Redux/Webpack] Generate a react boilerplate project',\n    },\n    {\n        name: 'React-Redux',\n        desc: '[2017] [React/Redux/Webpack/Node.js] Generate a react boilerplate project',\n    },\n    {\n        name: 'Webpack',\n        desc: '[2016] [Webpack] Webpack Demo',\n    },\n    {\n        name: 'HKBU-Webpage',\n        desc: '[2015] [JS] Redesign HKBU Webpage',\n    }\n]\n\nconst BASIC: IStructure[] = [\n    {\n        name: 'LeetCode',\n        desc: '[2019+] CS Fundamentals: Algorithms and Data structures'\n    },\n    {\n        name: 'Calculus-Notes',\n        desc: '[2020] mathematics / calculus / integral / derivatives ...'\n    }\n]\n\nconst AI: IStructure[] = [\n    {\n        name: 'Deep-Learning',\n        desc: '[2020] Deep Learning / Coursera',\n    },\n    {\n        name: 'Machine-Learning-Practice',\n        desc: '[2020] ML',\n    },\n    {\n        name: 'Tensorflow.js-LinearRegression',\n        desc: '[2019] [Tensorflow.js/React] Machine Learning in Front-end development',\n        link: 'https://linjiayu6.github.io/Tensorflow.js-LinearRegression/',\n    },\n    {\n        name: 'DL-BayesTheorem',\n        desc: '[2019][Python/ Bayes / Naive Bayes Classifier]',\n    },\n    {\n        name: 'Python-practice',\n        desc: '[2019] WebCrawler/Python',\n    },\n    {\n        name: 'RSA',\n        desc: '[2015][RSA/Python] Implementation of the RSA algorithm in Python'\n    }\n]\n\nexport default {\n    FE,\n    AI,\n    BASIC\n};","import React from 'react'\nimport CONFIG, { IKey } from '../config/constant'\n\ninterface IPROPS {}\n\ninterface ISTATE {\n  _config: {\n    title: string;\n    name: string;\n  }[]\n}\n\nclass OpenSource extends React.Component<IPROPS, ISTATE> {\n  state = {\n    _config: [\n      { title: '🔭 FRONT END', name: 'FE' },\n      { title: '🌱 ARTIFICIAL INTELLIGENCE', name: 'AI' },\n      { title: '📚 BASIC', name: 'BASIC' }\n    ]\n  }\n\n  redirectToUrl (url?: string) {\n      return url ? <a href={url} style={{ color: '#ccc' }}>demo <span role=\"img\" aria-label=\"l\">🚀</span> </a> : null\n  }\n\n  renderConfig ({ title, name }: \n    { title: string; \n      name: IKey;\n    }) {\n      return (\n        <div key={name}>\n          <h4>{ title }</h4>\n          <ul>\n            {\n              CONFIG[name] && CONFIG[name].map((item, key) => (\n                <li key={key}>\n                  <div>\n                      <a className=\"name\" href={`https://github.com/Linjiayu6/${item.name}`}>{ item.name }</a>\n                      {\n                        this.redirectToUrl(item.link)\n                      }\n                      <span className=\"desc\">{item.desc}</span>\n                  </div>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      )\n  }\n\n  render () {\n    return (\n      <main>\n        <h3># OPEN SOURCE <span role=\"img\" aria-label=\"l\">🧐</span></h3>\n        {\n          this.state._config.map(({ name, title }: any) => this.renderConfig({ name, title }))\n        }\n        <p>More Projects See <a href=\"https://github.com/Linjiayu6\">GitHub</a></p>\n      </main>\n    ) \n  }\n}\n\nexport default OpenSource","import React from 'react'\n\nconst list: string[] = [\n    'Event Loop@linjiayu',\n    'Redux code@linjiayu',\n    'Redux / Koa Middleware@linjiayu',\n    'Sorting Algorithms@linjiayu',\n    'CRC32@linjiayu',\n    'Machine Learning@linjiayu'\n]\nconst url: string = 'https://github.com/Linjiayu6/Tech-Sharing'\n\nexport default function () {\n    return (\n        <main>\n          <h3># TECH SHARING <span role=\"img\" aria-label=\"l\">🤪</span></h3>\n          <ul>\n            {list.map((item, key) => <li key={key}><a href={url}>{item}</a></li>)}\n          </ul>\n          <p>More Projects See <a href={url}>Tech-Sharing</a></p>\n      </main>\n    )\n}","import React from 'react'\n\ninterface ITEM {\n    id: number;\n    tags: string[];\n}\n\nconst list: ITEM[] = [\n    {\n        id: 2021,\n        tags: ['ZHANGJIAJIE@CHINA']\n    },\n    {\n        id: 2020,\n        tags: ['🇬🇧 UK', 'SHANG HAI@CHINA']\n    }, \n    {\n        id: 2019,\n        tags: ['🇵🇭 PHILIPPINES', 'YUN NAN@CHINA', '🇯🇵 JAPAN']\n    },\n    {\n        id: 2018,\n        tags: ['🇹🇭 THAILAND', 'SHANG HAI@CHINA', '🇵🇹 PORTUGAL', '🇪🇸 SPAIN']\n    }, \n    {\n        id: 2017,\n        tags: ['TIAN JING@CHINA', '🇮🇱 ISRAEL', '🇯🇴JORDAN']\n    },\n    {\n        id: 2016,\n        tags: ['HARBIN@CHINA', '🇦🇪 DUBAI', '🇿🇦 SOUTH AFRICA']\n    },\n    {\n        id: 2015,\n        tags: ['🇭🇰 HONG KONG@CHINA', 'GUANG ZHOU@CHINA', 'SHEN ZHEN@CHINA', '🐼 CHENG DU@CHINA', 'NAN JING@CHINA']\n    },\n    {\n        id: 2014,\n        tags: ['🇸🇬 SINGAPORE', '🇮🇩 INDONESIA', 'XIA MEN@CHINA', 'HANG ZHOU@CHINA', '🇫🇷 FRANCE', '🇨🇭 SWITZERLAND', '🇮🇹 ITALY']\n    },\n    {\n        id: 2013,\n        tags: ['TAI WAN@CHINA', 'SHAN DONG@CHINA']\n    },\n    {\n        id: 2012,\n        tags: ['🇺🇸 SAIPAN', 'XI AN@CHINA', 'SHEN YANG@CHINA', 'SHANG HAI@CHINA']\n    }, \n    {\n        id: 2011,\n        tags: ['🐼 CHENG DU@CHINA', '🥥 SAN YA@CHINA']\n    }\n\n]\n\nfunction Life () {\n    return (\n        <main>\n          <h3># SEE THE WORLD <span role=\"img\" aria-label=\"l\">🌎</span></h3>\n          <ul>\n            {list.map((item, key) => \n              <li key={key}>\n                <span className=\"date\">{item.id}</span>\n                {item.tags.map(i => <span key={i} className=\"travel\"> / {i}</span>)}\n              </li>\n              )}\n          </ul>\n        </main>\n      )\n}\n\nexport default Life;","import React from 'react'\n// import Lottie from 'lottie-react-web'\n\n// import _lottieJSON from '../config/lottie_start.json';\nimport Header from '../component/Header'\nimport OpenSource from '../component/OpenSource'\nimport TechShare from '../component/TechShare'\nimport Life from '../component/Life'\n\nimport '../style/App.css'\n\nfunction App () {\n  // const [isLoad, setLoading] = useState(true)\n  // const [lottieJSON, setLottieJSON] = useState(_lottieJSON)\n\n  // useEffect(() => {\n  //   async function fetch () {\n  //     try {\n  //       // const body = await axios.get('https://assets4.lottiefiles.com/private_files/lf30_P9kQz3.json')\n  //       if (body && body.data) {\n  //         setLottieJSON(body && body.data)\n  //       } else {\n  //         setLoading(false)\n  //       }\n  //     } catch (error) {\n  //       setLoading(false)\n  //     }\n  //   }\n  //   fetch()\n  // }, [])\n\n  // const _renderLoad = () => {\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //   }, 2500)\n  //   return (\n  //     <div className=\"lottie-animation\">\n  //       <h2>Loading ...</h2>\n  //       <Lottie title=\"lottie\" options={{ animationData: lottieJSON }} />\n  //     </div>\n  //   )\n  // }\n\n  const _render = () => (\n    <div className=\"App\">\n      <Header />\n      <hr />\n      <OpenSource />\n      <TechShare />\n      <Life />\n    </div>\n  )\n\n  return _render()\n  // return isLoad ? _renderLoad() : _render()\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './tools/serviceWorker';\nimport App from './container/App.tsx';\nimport './style/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}